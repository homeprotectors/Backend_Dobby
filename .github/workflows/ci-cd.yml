name: ci-cd

on:
  push:
    branches: [ "main", "feature"]
  pull_request:
    branches: [ "main", "feature"]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPO: homeprotectors

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Build jar
        run: ./gradlew clean build -x test

      - name: Tests
        run: ./gradlew test

      - name: Derive image tag (short sha)
        id: meta
        run: echo "tag=${GITHUB_SHA::12}" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::146414906510:role/GitHubActionsPushToECR
          role-session-name: gh-actions-ecr

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            146414906510.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ steps.meta.outputs.tag }}
            146414906510.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest

  deploy-ec2:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature'
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy (compose pull & up)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            export APP_VERSION=${{ needs.build-and-push.outputs.image_tag }}
            cd /srv/home-protectors
            docker compose pull
            APP_VERSION=${APP_VERSION} docker compose up -d --remove-orphans
            docker image prune -f
